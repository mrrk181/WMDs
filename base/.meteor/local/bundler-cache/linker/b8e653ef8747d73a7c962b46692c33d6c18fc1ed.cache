[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nAccounts = Package['accounts-base'].Accounts;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nRoles = Package['alanning:roles'].Roles;\nBert = Package['themeteorchef:bert'].Bert;\nValidatedMethod = Package['mdg:validated-method'].ValidatedMethod;\nFactory = Package['dburles:factory'].Factory;\nDDPRateLimiter = Package['ddp-rate-limiter'].DDPRateLimiter;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nBrowserPolicy = Package['browser-policy-common'].BrowserPolicy;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nAutoupdate = Package.autoupdate.Autoupdate;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"documents\":{\"server\":{\"publications.js\":[\"meteor/meteor\",\"meteor/check\",\"../documents\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// imports/api/documents/server/publications.js                         //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nvar Meteor = void 0;                                                    // 1\nmodule.import('meteor/meteor', {                                        // 1\n  \"Meteor\": function (v) {                                              // 1\n    Meteor = v;                                                         // 1\n  }                                                                     // 1\n}, 0);                                                                  // 1\nvar check = void 0;                                                     // 1\nmodule.import('meteor/check', {                                         // 1\n  \"check\": function (v) {                                               // 1\n    check = v;                                                          // 1\n  }                                                                     // 1\n}, 1);                                                                  // 1\nvar Documents = void 0;                                                 // 1\nmodule.import('../documents', {                                         // 1\n  \"default\": function (v) {                                             // 1\n    Documents = v;                                                      // 1\n  }                                                                     // 1\n}, 2);                                                                  // 1\nMeteor.publish('documents.list', function () {                          // 5\n  return Documents.find();                                              // 5\n});                                                                     // 5\nMeteor.publish('documents.view', function (_id) {                       // 7\n  check(_id, String);                                                   // 8\n  return Documents.find(_id);                                           // 9\n});                                                                     // 10\n//////////////////////////////////////////////////////////////////////////\n\n}]},\"documents.js\":[\"meteor/mongo\",\"meteor/aldeed:simple-schema\",\"meteor/dburles:factory\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// imports/api/documents/documents.js                                   //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nvar Mongo = void 0;                                                     // 1\nmodule.import('meteor/mongo', {                                         // 1\n  \"Mongo\": function (v) {                                               // 1\n    Mongo = v;                                                          // 1\n  }                                                                     // 1\n}, 0);                                                                  // 1\nvar SimpleSchema = void 0;                                              // 1\nmodule.import('meteor/aldeed:simple-schema', {                          // 1\n  \"SimpleSchema\": function (v) {                                        // 1\n    SimpleSchema = v;                                                   // 1\n  }                                                                     // 1\n}, 1);                                                                  // 1\nvar Factory = void 0;                                                   // 1\nmodule.import('meteor/dburles:factory', {                               // 1\n  \"Factory\": function (v) {                                             // 1\n    Factory = v;                                                        // 1\n  }                                                                     // 1\n}, 2);                                                                  // 1\nvar Documents = new Mongo.Collection('Documents');                      // 5\nmodule.export(\"default\", exports.default = Documents);                  // 1\nDocuments.allow({                                                       // 8\n  insert: function () {                                                 // 9\n    return false;                                                       // 9\n  },                                                                    // 9\n  update: function () {                                                 // 10\n    return false;                                                       // 10\n  },                                                                    // 10\n  remove: function () {                                                 // 11\n    return false;                                                       // 11\n  }                                                                     // 11\n});                                                                     // 8\nDocuments.deny({                                                        // 14\n  insert: function () {                                                 // 15\n    return true;                                                        // 15\n  },                                                                    // 15\n  update: function () {                                                 // 16\n    return true;                                                        // 16\n  },                                                                    // 16\n  remove: function () {                                                 // 17\n    return true;                                                        // 17\n  }                                                                     // 17\n});                                                                     // 14\nDocuments.schema = new SimpleSchema({                                   // 20\n  title: {                                                              // 21\n    type: String,                                                       // 22\n    label: 'The title of the document.'                                 // 23\n  },                                                                    // 21\n  body: {                                                               // 25\n    type: String,                                                       // 26\n    label: 'The body of the document.'                                  // 27\n  }                                                                     // 25\n});                                                                     // 20\nDocuments.attachSchema(Documents.schema);                               // 31\nFactory.define('document', Documents, {                                 // 33\n  title: function () {                                                  // 34\n    return 'Factory Title';                                             // 34\n  },                                                                    // 34\n  body: function () {                                                   // 35\n    return 'Factory Body';                                              // 35\n  }                                                                     // 35\n});                                                                     // 33\n//////////////////////////////////////////////////////////////////////////\n\n}],\"methods.js\":[\"meteor/aldeed:simple-schema\",\"meteor/mdg:validated-method\",\"./documents\",\"../../modules/rate-limit.js\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// imports/api/documents/methods.js                                     //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nmodule.export({                                                         // 1\n  upsertDocument: function () {                                         // 1\n    return upsertDocument;                                              // 1\n  },                                                                    // 1\n  removeDocument: function () {                                         // 1\n    return removeDocument;                                              // 1\n  }                                                                     // 1\n});                                                                     // 1\nvar SimpleSchema = void 0;                                              // 1\nmodule.import('meteor/aldeed:simple-schema', {                          // 1\n  \"SimpleSchema\": function (v) {                                        // 1\n    SimpleSchema = v;                                                   // 1\n  }                                                                     // 1\n}, 0);                                                                  // 1\nvar ValidatedMethod = void 0;                                           // 1\nmodule.import('meteor/mdg:validated-method', {                          // 1\n  \"ValidatedMethod\": function (v) {                                     // 1\n    ValidatedMethod = v;                                                // 1\n  }                                                                     // 1\n}, 1);                                                                  // 1\nvar Documents = void 0;                                                 // 1\nmodule.import('./documents', {                                          // 1\n  \"default\": function (v) {                                             // 1\n    Documents = v;                                                      // 1\n  }                                                                     // 1\n}, 2);                                                                  // 1\nvar rateLimit = void 0;                                                 // 1\nmodule.import('../../modules/rate-limit.js', {                          // 1\n  \"default\": function (v) {                                             // 1\n    rateLimit = v;                                                      // 1\n  }                                                                     // 1\n}, 3);                                                                  // 1\nvar upsertDocument = new ValidatedMethod({                              // 6\n  name: 'documents.upsert',                                             // 7\n  validate: new SimpleSchema({                                          // 8\n    _id: {                                                              // 9\n      type: String,                                                     // 9\n      optional: true                                                    // 9\n    },                                                                  // 9\n    title: {                                                            // 10\n      type: String,                                                     // 10\n      optional: true                                                    // 10\n    },                                                                  // 10\n    body: {                                                             // 11\n      type: String,                                                     // 11\n      optional: true                                                    // 11\n    }                                                                   // 11\n  }).validator(),                                                       // 8\n  run: function (document) {                                            // 13\n    return Documents.upsert({                                           // 14\n      _id: document._id                                                 // 14\n    }, {                                                                // 14\n      $set: document                                                    // 14\n    });                                                                 // 14\n  }                                                                     // 15\n});                                                                     // 6\nvar removeDocument = new ValidatedMethod({                              // 18\n  name: 'documents.remove',                                             // 19\n  validate: new SimpleSchema({                                          // 20\n    _id: {                                                              // 21\n      type: String                                                      // 21\n    }                                                                   // 21\n  }).validator(),                                                       // 20\n  run: function (_ref) {                                                // 23\n    var _id = _ref._id;                                                 // 23\n    Documents.remove(_id);                                              // 24\n  }                                                                     // 25\n});                                                                     // 18\nrateLimit({                                                             // 28\n  methods: [upsertDocument, removeDocument],                            // 29\n  limit: 5,                                                             // 33\n  timeRange: 1000                                                       // 34\n});                                                                     // 28\n//////////////////////////////////////////////////////////////////////////\n\n}]}},\"startup\":{\"server\":{\"accounts\":{\"email-templates.js\":[\"meteor/accounts-base\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// imports/startup/server/accounts/email-templates.js                   //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nvar Accounts = void 0;                                                  // 1\nmodule.import('meteor/accounts-base', {                                 // 1\n  \"Accounts\": function (v) {                                            // 1\n    Accounts = v;                                                       // 1\n  }                                                                     // 1\n}, 0);                                                                  // 1\nvar name = 'Application Name';                                          // 3\nvar email = '<support@application.com>';                                // 4\nvar from = name + \" \" + email;                                          // 5\nvar emailTemplates = Accounts.emailTemplates;                           // 6\nemailTemplates.siteName = name;                                         // 8\nemailTemplates.from = from;                                             // 9\nemailTemplates.resetPassword = {                                        // 11\n  subject: function () {                                                // 12\n    return \"[\" + name + \"] Reset Your Password\";                        // 13\n  },                                                                    // 14\n  text: function (user, url) {                                          // 15\n    var userEmail = user.emails[0].address;                             // 16\n    var urlWithoutHash = url.replace('#/', '');                         // 17\n    return \"A password reset has been requested for the account related to this\\n    address (\" + userEmail + \"). To reset the password, visit the following link:\\n    \\n\\n\" + urlWithoutHash + \"\\n\\n If you did not request this reset, please ignore\\n    this email. If you feel something is wrong, please contact our support team:\\n    \" + email + \".\";\n  }                                                                     // 24\n};                                                                      // 11\n//////////////////////////////////////////////////////////////////////////\n\n}]},\"api.js\":[\"../../api/documents/methods.js\",\"../../api/documents/server/publications.js\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// imports/startup/server/api.js                                        //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nmodule.import('../../api/documents/methods.js');                        // 1\nmodule.import('../../api/documents/server/publications.js');            // 1\n//////////////////////////////////////////////////////////////////////////\n\n}],\"browser-policy.js\":[\"meteor/browser-policy-common\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// imports/startup/server/browser-policy.js                             //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nvar BrowserPolicy = void 0;                                             // 1\nmodule.import('meteor/browser-policy-common', {                         // 1\n  \"BrowserPolicy\": function (v) {                                       // 1\n    BrowserPolicy = v;                                                  // 1\n  }                                                                     // 1\n}, 0);                                                                  // 1\n// e.g., BrowserPolicy.content.allowOriginForAll( 's3.amazonaws.com' );\nBrowserPolicy.content.allowFontOrigin(\"data:\");                         // 3\n//////////////////////////////////////////////////////////////////////////\n\n}],\"fixtures.js\":[\"meteor/meteor\",\"meteor/alanning:roles\",\"meteor/accounts-base\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// imports/startup/server/fixtures.js                                   //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nvar Meteor = void 0;                                                    // 1\nmodule.import('meteor/meteor', {                                        // 1\n  \"Meteor\": function (v) {                                              // 1\n    Meteor = v;                                                         // 1\n  }                                                                     // 1\n}, 0);                                                                  // 1\nvar Roles = void 0;                                                     // 1\nmodule.import('meteor/alanning:roles', {                                // 1\n  \"Roles\": function (v) {                                               // 1\n    Roles = v;                                                          // 1\n  }                                                                     // 1\n}, 1);                                                                  // 1\nvar Accounts = void 0;                                                  // 1\nmodule.import('meteor/accounts-base', {                                 // 1\n  \"Accounts\": function (v) {                                            // 1\n    Accounts = v;                                                       // 1\n  }                                                                     // 1\n}, 2);                                                                  // 1\n                                                                        //\nif (!Meteor.isProduction) {                                             // 5\n  var users = [{                                                        // 6\n    email: 'admin@admin.com',                                           // 7\n    password: 'password',                                               // 8\n    profile: {                                                          // 9\n      name: {                                                           // 10\n        first: 'Carl',                                                  // 10\n        last: 'Winslow'                                                 // 10\n      }                                                                 // 10\n    },                                                                  // 9\n    roles: ['admin']                                                    // 12\n  }];                                                                   // 6\n  users.forEach(function (_ref) {                                       // 15\n    var email = _ref.email,                                             // 15\n        password = _ref.password,                                       // 15\n        profile = _ref.profile,                                         // 15\n        roles = _ref.roles;                                             // 15\n    var userExists = Meteor.users.findOne({                             // 16\n      'emails.address': email                                           // 16\n    });                                                                 // 16\n                                                                        //\n    if (!userExists) {                                                  // 18\n      var userId = Accounts.createUser({                                // 19\n        email: email,                                                   // 19\n        password: password,                                             // 19\n        profile: profile                                                // 19\n      });                                                               // 19\n      Roles.addUsersToRoles(userId, roles);                             // 20\n    }                                                                   // 21\n  });                                                                   // 22\n}                                                                       // 23\n//////////////////////////////////////////////////////////////////////////\n\n}],\"index.js\":[\"./accounts/email-templates\",\"./browser-policy\",\"./fixtures\",\"./api\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// imports/startup/server/index.js                                      //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nmodule.import('./accounts/email-templates');                            // 1\nmodule.import('./browser-policy');                                      // 1\nmodule.import('./fixtures');                                            // 1\nmodule.import('./api');                                                 // 1\n//////////////////////////////////////////////////////////////////////////\n\n}]}},\"modules\":{\"rate-limit.js\":[\"meteor/meteor\",\"meteor/ddp-rate-limiter\",\"meteor/underscore\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// imports/modules/rate-limit.js                                        //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nmodule.export({                                                         // 1\n  \"default\": function () {                                              // 1\n    return rateLimit;                                                   // 1\n  }                                                                     // 1\n});                                                                     // 1\nvar Meteor = void 0;                                                    // 1\nmodule.import('meteor/meteor', {                                        // 1\n  \"Meteor\": function (v) {                                              // 1\n    Meteor = v;                                                         // 1\n  }                                                                     // 1\n}, 0);                                                                  // 1\nvar DDPRateLimiter = void 0;                                            // 1\nmodule.import('meteor/ddp-rate-limiter', {                              // 1\n  \"DDPRateLimiter\": function (v) {                                      // 1\n    DDPRateLimiter = v;                                                 // 1\n  }                                                                     // 1\n}, 1);                                                                  // 1\n                                                                        //\nvar _ = void 0;                                                         // 1\n                                                                        //\nmodule.import('meteor/underscore', {                                    // 1\n  \"_\": function (v) {                                                   // 1\n    _ = v;                                                              // 1\n  }                                                                     // 1\n}, 2);                                                                  // 1\n                                                                        //\nvar fetchMethodNames = function (methods) {                             // 5\n  return _.pluck(methods, 'name');                                      // 5\n};                                                                      // 5\n                                                                        //\nvar assignLimits = function (_ref) {                                    // 7\n  var methods = _ref.methods,                                           // 7\n      limit = _ref.limit,                                               // 7\n      timeRange = _ref.timeRange;                                       // 7\n  var methodNames = fetchMethodNames(methods);                          // 8\n                                                                        //\n  if (Meteor.isServer) {                                                // 10\n    DDPRateLimiter.addRule({                                            // 11\n      name: function (name) {                                           // 12\n        return _.contains(methodNames, name);                           // 12\n      },                                                                // 12\n      connectionId: function () {                                       // 13\n        return true;                                                    // 13\n      }                                                                 // 13\n    }, limit, timeRange);                                               // 11\n  }                                                                     // 15\n};                                                                      // 16\n                                                                        //\nfunction rateLimit(options) {                                           // 18\n  return assignLimits(options);                                         // 18\n}                                                                       // 18\n//////////////////////////////////////////////////////////////////////////\n\n}]}},\"server\":{\"main.js\":[\"/imports/startup/server\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// server/main.js                                                       //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nmodule.import('/imports/startup/server');                               // 1\n//////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/imports/api/documents/server/publications.js","/imports/api/documents/documents.js","/imports/api/documents/methods.js","/imports/startup/server/accounts/email-templates.js","/imports/startup/server/api.js","/imports/startup/server/browser-policy.js","/imports/startup/server/fixtures.js","/imports/startup/server/index.js","/imports/modules/rate-limit.js","/server/main.js"],"names":["Meteor","module","import","v","check","Documents","publish","find","_id","String","Mongo","SimpleSchema","Factory","Collection","export","exports","default","allow","insert","update","remove","deny","schema","title","type","label","body","attachSchema","define","upsertDocument","removeDocument","ValidatedMethod","rateLimit","name","validate","optional","validator","run","document","upsert","$set","methods","limit","timeRange","Accounts","email","from","emailTemplates","siteName","resetPassword","subject","text","user","url","userEmail","emails","address","urlWithoutHash","replace","BrowserPolicy","content","allowFontOrigin","Roles","isProduction","users","password","profile","first","last","roles","forEach","userExists","findOne","userId","createUser","addUsersToRoles","DDPRateLimiter","_","fetchMethodNames","pluck","assignLimits","methodNames","isServer","addRule","contains","connectionId","options"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport Documents from '../documents';\n\nMeteor.publish('documents.list', () => Documents.find());\n\nMeteor.publish('documents.view', (_id) => {\n  check(_id, String);\n  return Documents.find(_id);\n});\n","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\nimport { Factory } from 'meteor/dburles:factory';\n\nconst Documents = new Mongo.Collection('Documents');\nexport default Documents;\n\nDocuments.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nDocuments.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nDocuments.schema = new SimpleSchema({\n  title: {\n    type: String,\n    label: 'The title of the document.',\n  },\n  body: {\n    type: String,\n    label: 'The body of the document.',\n  },\n});\n\nDocuments.attachSchema(Documents.schema);\n\nFactory.define('document', Documents, {\n  title: () => 'Factory Title',\n  body: () => 'Factory Body',\n});\n","import { SimpleSchema } from 'meteor/aldeed:simple-schema';\nimport { ValidatedMethod } from 'meteor/mdg:validated-method';\nimport Documents from './documents';\nimport rateLimit from '../../modules/rate-limit.js';\n\nexport const upsertDocument = new ValidatedMethod({\n  name: 'documents.upsert',\n  validate: new SimpleSchema({\n    _id: { type: String, optional: true },\n    title: { type: String, optional: true },\n    body: { type: String, optional: true },\n  }).validator(),\n  run(document) {\n    return Documents.upsert({ _id: document._id }, { $set: document });\n  },\n});\n\nexport const removeDocument = new ValidatedMethod({\n  name: 'documents.remove',\n  validate: new SimpleSchema({\n    _id: { type: String },\n  }).validator(),\n  run({ _id }) {\n    Documents.remove(_id);\n  },\n});\n\nrateLimit({\n  methods: [\n    upsertDocument,\n    removeDocument,\n  ],\n  limit: 5,\n  timeRange: 1000,\n});\n","import { Accounts } from 'meteor/accounts-base';\n\nconst name = 'Application Name';\nconst email = '<support@application.com>';\nconst from = `${name} ${email}`;\nconst emailTemplates = Accounts.emailTemplates;\n\nemailTemplates.siteName = name;\nemailTemplates.from = from;\n\nemailTemplates.resetPassword = {\n  subject() {\n    return `[${name}] Reset Your Password`;\n  },\n  text(user, url) {\n    const userEmail = user.emails[0].address;\n    const urlWithoutHash = url.replace('#/', '');\n\n    return `A password reset has been requested for the account related to this\n    address (${userEmail}). To reset the password, visit the following link:\n    \\n\\n${urlWithoutHash}\\n\\n If you did not request this reset, please ignore\n    this email. If you feel something is wrong, please contact our support team:\n    ${email}.`;\n  },\n};\n","import '../../api/documents/methods.js';\nimport '../../api/documents/server/publications.js';\n","import { BrowserPolicy } from 'meteor/browser-policy-common';\n// e.g., BrowserPolicy.content.allowOriginForAll( 's3.amazonaws.com' );\nBrowserPolicy.content.allowFontOrigin(\"data:\");\n","import { Meteor } from 'meteor/meteor';\nimport { Roles } from 'meteor/alanning:roles';\nimport { Accounts } from 'meteor/accounts-base';\n\nif (!Meteor.isProduction) {\n  const users = [{\n    email: 'admin@admin.com',\n    password: 'password',\n    profile: {\n      name: { first: 'Carl', last: 'Winslow' },\n    },\n    roles: ['admin'],\n  }];\n\n  users.forEach(({ email, password, profile, roles }) => {\n    const userExists = Meteor.users.findOne({ 'emails.address': email });\n\n    if (!userExists) {\n      const userId = Accounts.createUser({ email, password, profile });\n      Roles.addUsersToRoles(userId, roles);\n    }\n  });\n}\n","import './accounts/email-templates';\nimport './browser-policy';\nimport './fixtures';\nimport './api';\n","import { Meteor } from 'meteor/meteor';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport { _ } from 'meteor/underscore';\n\nconst fetchMethodNames = methods => _.pluck(methods, 'name');\n\nconst assignLimits = ({ methods, limit, timeRange }) => {\n  const methodNames = fetchMethodNames(methods);\n\n  if (Meteor.isServer) {\n    DDPRateLimiter.addRule({\n      name(name) { return _.contains(methodNames, name); },\n      connectionId() { return true; },\n    }, limit, timeRange);\n  }\n};\n\nexport default function rateLimit(options) { return assignLimits(options); }\n","import '/imports/startup/server';\n"]}}]